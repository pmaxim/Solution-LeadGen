@using BlazorWeb.Shared.Services
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using BlazorWeb.Shared.Models
@inject HttpClient _http
@inject MyScopeService _mss

<label id="template-upload" class="mb-0 c-p">
    @if (_spinner)
    {
        <span class="spinner-border text-primary" role="status">
            <span class="sr-only"></span>
        </span>
    }
    else
    {
        <span @onclick="@(Run)" class="oi oi-media-play"></span>
    }
</label>

@code {
    private bool _spinner;
    private App? _main;

    protected override void OnInitialized()
    {
        _main = (App)_mss["App"];
    }

    private async void Run()
    {
        _spinner = true;
        try
        {
            var t = await _http.GetFromJsonAsync<BoolString>("Run/RunRings");
            if (t is {Flag: true })
            {
                _main?.PanelUploadChange(new BoolString
                {
                    Value = $"Hangfire jobsId: {t.Value}",
                    Flag = true
                });
            }
            else
            {
                _main?.PanelUploadChange(new BoolString
                {
                    Value = t?.Value,
                    Flag = true
                });
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
      
        _spinner = false;
        await InvokeAsync(StateHasChanged);
    }
}